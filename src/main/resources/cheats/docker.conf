docker {
  ps {
    "-a" = "show all"
    "-q --quiet" = "only display numeric IDs"
    "-l --latest" = "Show the latest created container (includes all states)"
  }
  logs {
    "!example" = "logs <name/id> //Shows stdout & stderr"
    "-f --follow" = "tail"
  }
  run {
    "!usage" = "docker run <image> [COMMAND] [ARG...] //create container and run it"
    "!example1" = "docker run -d --name wpdb -e MYSQL_ROOT_PASSWORD=ch2demo mysql:5 "
    "!example2" = "docker run -d --name wp3 --link wpdb:mysql -p 80 -v /var/lock/apache2/ -v /var/run/apache2/ --read-only wordpress:4"
    "!example3" = "docker run --entrypoint="cat" wordpress:4 /entrypoint.sh"
    "!example4" = "docker run -d --name bmweb -v ~/example-docs:/usr/local/apache2/htdocs -p 80:80 httpd:latest"
    "--name <name>" = "Name of the container"
    "-d --detach" = "Run container in background and print container ID"
    "-i --interactive" = "Keep STDIN open even if not attached"
    "-t --tty" = "Allocate a pseudo-TTY"
    "--rm" = "automatically remove the container when it exits"
    "-p --publish" = "publish a container's port(s) to the host"
    "-v --volume" = "Bind mount a volume"
    "--link <name/id>[:alias]" = "Add link to another container - The link alias will be added to the DNS override (/etc/hosts) list of the new container with the IP address of the target container. Ports exposed by the target container can be accessed."
    "-e --env" = "set environment variables"
    "--env-file" = "read in a file of environment variables"
    "--read-only" = "Mount the container's root filesystem as read only"
    "--network" = "Connect a container to a network"
    "--cidfile <path-to-file>" = "write container id into file"
    "--restart" = "Restart policy to apply when a container exits [no|on-failure[:max-retries]|unless-stopped|always] (default no)"
    "--entrypoint" = "Overwrite the default ENTRYPOINT of the image"
    "--pid host" = "Use the host's pid namespace"
    "--expose" = "Exposes a port of the container without publishing the port to the host network"
  }
  exec {
    "!usage" = "docker exec <name/id> <cmd>"
    "!example" = "docker exec lamp-test ps"
    "!example" = "docker exec -ti lamp-test /bin/bash"
  }
  inspect {
    "!usage" = "docker inspect <name/id>"
    "!example" = "docker inspect --format \"{{.State.Running}}\" wp"
  }
  rm {
    "!usage" = "docker rm <name/id>"
    "!example" = "docker rm -vf one two"
    "-v" = "remove volume"
    "-f" = "force"
  }
  images {
   "-a" = "Show all images (default hides intermediate images)"
  }
  rmi {
    "!desc" = "Remove one or more images"
    "!usage" = "docker rmi <image>"
  }
  port = "List port mappings or a specific mapping for the container"
}
