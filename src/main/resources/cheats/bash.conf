bash { 
	"!url" = "http://openbook.rheinwerk-verlag.de/shell_programmierung/"
	vars {
		"$0" = Script name
		"$$" = Prozessnummer
		"$?" = Beendigungsstatus des zuletzt ausgeführten Kommandos
		"$1 - $n" = Argumente aus der Kommandozeile
		"$*" = Alle Argumente aus der Kommandozeile in einer Zeichenkette
		"$@" = Alle Argumente aus der Kommandozeile als einzelne Zeichenketten (Array von Zeichenketten)
		"$#" = Anzahl aller Argumente in der Kommandozeile 
		OLDPWD = Der Wert ist das zuvor besuchte Arbeitsverzeichnis - wird vom Kommando cd gesetzt
		PWD = Aktuelles Arbeitsverzeichnis
		RANDOM = Pseudo-Zufallszahl zwischen 0 bis 32767
	}
	cmd {
		"!Uebersicht" = "http://openbook.rheinwerk-verlag.de/shell_programmierung/shell_016_000.htm#RxxKap016000040050021F03F177"
		"basename" = "'basename Dateiname [Suffix]': Dateinamen ohne Pfad ermitteln - optional Dateiendung entfernen, e.g. 'basename $HOME/meinText.txt .txt'"
		"dirname" = "'dirname Dateiname': Pfad ohne Dateinamen ermitteln"
		pushd = "'pushd [dir-name]': Pushes the current working directory on top of directory stack. If path is omitted, the path at the top of the directory stack is used, which has the effect of toggling between two directories."
		popd = Returns to the path at the top of the directory stack 
		dirs = Shows directory stack (modified by pushd and popd)
		md5sum = md5 summe
		diff = "'diff file1.txt file2.txt': Vergleicht den Inhalt von zwei Dateien"
		nl = Mit nl geben Sie die Zeilen einer Datei mit deren Nummer auf dem Bildschirm aus
		sort = Ohne Angabe einer Option sortiert sort eine Datei zeilenweise in alphabetischer Reihenfolge
		tr = "'tr str1 str2 file': Mit tr können Zeichen durch andere Zeichen ersetzt werden"
		uniq = "Doppelt vorhandene Zeilen löschen. Voraussetzung ist, dass die Datei sortiert ist und die doppelten Zeilen direkt hintereinander folgen"
		wc = {
		"!" = "Mit wc können Sie die Zeichen, Wörter und/oder Zeilen einer Datei zählen"
		"-l" = lines
		"-w" = words
		"-c" = characters
		} 
	}
}
